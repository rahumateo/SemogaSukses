// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package dictionary;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class LangridException_Type_InterfaceSOAPSerializer extends InterfaceSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_AccessLimitExceededException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "AccessLimitExceededException");
    private CombinedSerializer ns1_myAccessLimitExceededException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_LanguagePairNotUniquelyDecidedException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "LanguagePairNotUniquelyDecidedException");
    private CombinedSerializer ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_InvalidParameterException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "InvalidParameterException");
    private CombinedSerializer ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer;
    private static final javax.xml.namespace.QName ns1_NoAccessPermissionException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "NoAccessPermissionException");
    private CombinedSerializer ns1_myNoAccessPermissionException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_NoValidEndpointsException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "NoValidEndpointsException");
    private CombinedSerializer ns1_myNoValidEndpointsException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_ProcessFailedException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ProcessFailedException");
    private CombinedSerializer ns1_myProcessFailedException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_ServerBusyException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ServerBusyException");
    private CombinedSerializer ns1_myServerBusyException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_ServiceNotActiveException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ServiceNotActiveException");
    private CombinedSerializer ns1_myServiceNotActiveException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_ServiceNotFoundException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ServiceNotFoundException");
    private CombinedSerializer ns1_myServiceNotFoundException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_UnsupportedLanguagePairException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "UnsupportedLanguagePairException");
    private CombinedSerializer ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_UnsupportedMatchingMethodException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "UnsupportedMatchingMethodException");
    private CombinedSerializer ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer;
    private CombinedSerializer ns1_myLangridException_Type_SOAPSerializer;
    
    public LangridException_Type_InterfaceSOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myAccessLimitExceededException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.AccessLimitExceededException_Type.class, ns1_AccessLimitExceededException_TYPE_QNAME);
        ns1_myAccessLimitExceededException_Type_SOAPSerializer = ns1_myAccessLimitExceededException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.LanguagePairNotUniquelyDecidedException_Type.class, ns1_LanguagePairNotUniquelyDecidedException_TYPE_QNAME);
        ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer = ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.InvalidParameterException_Type.class, ns1_InvalidParameterException_TYPE_QNAME);
        ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer = ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer.getInnermostSerializer();
        ns1_myNoAccessPermissionException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.NoAccessPermissionException_Type.class, ns1_NoAccessPermissionException_TYPE_QNAME);
        ns1_myNoAccessPermissionException_Type_SOAPSerializer = ns1_myNoAccessPermissionException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myNoValidEndpointsException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.NoValidEndpointsException_Type.class, ns1_NoValidEndpointsException_TYPE_QNAME);
        ns1_myNoValidEndpointsException_Type_SOAPSerializer = ns1_myNoValidEndpointsException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myProcessFailedException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ProcessFailedException_Type.class, ns1_ProcessFailedException_TYPE_QNAME);
        ns1_myProcessFailedException_Type_SOAPSerializer = ns1_myProcessFailedException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myServerBusyException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ServerBusyException_Type.class, ns1_ServerBusyException_TYPE_QNAME);
        ns1_myServerBusyException_Type_SOAPSerializer = ns1_myServerBusyException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myServiceNotActiveException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ServiceNotActiveException_Type.class, ns1_ServiceNotActiveException_TYPE_QNAME);
        ns1_myServiceNotActiveException_Type_SOAPSerializer = ns1_myServiceNotActiveException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myServiceNotFoundException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ServiceNotFoundException_Type.class, ns1_ServiceNotFoundException_TYPE_QNAME);
        ns1_myServiceNotFoundException_Type_SOAPSerializer = ns1_myServiceNotFoundException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.UnsupportedLanguagePairException_Type.class, ns1_UnsupportedLanguagePairException_TYPE_QNAME);
        ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer = ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer.getInnermostSerializer();
        ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.UnsupportedMatchingMethodException_Type.class, ns1_UnsupportedMatchingMethodException_TYPE_QNAME);
        ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer = ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer.getInnermostSerializer();
        QName type = new QName("http://langrid.nict.go.jp/ws_1_2/", "LangridException");
        CombinedSerializer interfaceSerializer = new dictionary.LangridException_Type_SOAPSerializer(type,
            ENCODE_TYPE, NULLABLE, SOAPConstants.NS_SOAP_ENCODING);
        interfaceSerializer = new ReferenceableSerializerImpl(DONT_SERIALIZE_AS_REF, interfaceSerializer, SOAPVersion.SOAP_11);
        ns1_myLangridException_Type_SOAPSerializer = interfaceSerializer.getInnermostSerializer();
        if (ns1_myLangridException_Type_SOAPSerializer instanceof Initializable) {
            ((Initializable)ns1_myLangridException_Type_SOAPSerializer).initialize(registry);
        }
    }
    
    public java.lang.Object doDeserialize(javax.xml.namespace.QName name, XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        javax.xml.namespace.QName elementType = getType(reader);
        if (elementType != null && elementType.equals(ns1_myAccessLimitExceededException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myAccessLimitExceededException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer.getXmlType())) {
            return ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myNoAccessPermissionException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myNoAccessPermissionException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myNoValidEndpointsException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myNoValidEndpointsException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myProcessFailedException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myProcessFailedException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myServerBusyException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myServerBusyException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myServiceNotActiveException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myServiceNotActiveException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myServiceNotFoundException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myServiceNotFoundException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType != null && elementType.equals(ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer.getXmlType())) {
            return ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer.deserialize(name, reader, context);
        } else if (elementType == null || elementType.equals(ns1_myLangridException_Type_SOAPSerializer.getXmlType())) {
            Object obj = ns1_myLangridException_Type_SOAPSerializer.deserialize(name, reader, context);
            return obj;
        }
        throw new DeserializationException("soap.unexpectedElementType", new Object[] {"", elementType.toString()});
    }
    
    public void doSerializeInstance(java.lang.Object obj, javax.xml.namespace.QName name, SerializerCallback callback,
        XMLWriter writer, SOAPSerializationContext context) throws Exception {
        dictionary.LangridException_Type instance = (dictionary.LangridException_Type)obj;
        
        if (obj instanceof dictionary.AccessLimitExceededException_Type) {
            ns1_myAccessLimitExceededException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.LanguagePairNotUniquelyDecidedException_Type) {
            ns1_myLanguagePairNotUniquelyDecidedException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.InvalidParameterException_Type) {
            ns1_myInvalidParameterException_Type_InterfaceSOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.NoAccessPermissionException_Type) {
            ns1_myNoAccessPermissionException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.NoValidEndpointsException_Type) {
            ns1_myNoValidEndpointsException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.ProcessFailedException_Type) {
            ns1_myProcessFailedException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.ServerBusyException_Type) {
            ns1_myServerBusyException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.ServiceNotActiveException_Type) {
            ns1_myServiceNotActiveException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.ServiceNotFoundException_Type) {
            ns1_myServiceNotFoundException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.UnsupportedLanguagePairException_Type) {
            ns1_myUnsupportedLanguagePairException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else if (obj instanceof dictionary.UnsupportedMatchingMethodException_Type) {
            ns1_myUnsupportedMatchingMethodException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        } else {
            ns1_myLangridException_Type_SOAPSerializer.serialize(obj, name, callback, writer, context);
        }
    }
}
