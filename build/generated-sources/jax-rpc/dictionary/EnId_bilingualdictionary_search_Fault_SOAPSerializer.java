// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package dictionary;


import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.soap.message.SOAPFaultInfo;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class EnId_bilingualdictionary_search_Fault_SOAPSerializer extends SOAPFaultInfoSerializer {
    private static final javax.xml.namespace.QName ns1_fault_QNAME = new QName("http://fws.cs.ui.ac.id/langrid-service-1.2/services/EnId_bilingualdictionary", "fault");
    private static final javax.xml.namespace.QName ns2_NoAccessPermissionException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "NoAccessPermissionException");
    private CombinedSerializer ns2_myNoAccessPermissionException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myNoAccessPermissionException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_ServerBusyException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ServerBusyException");
    private CombinedSerializer ns2_myServerBusyException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myServerBusyException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_InvalidParameterException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "InvalidParameterException");
    private CombinedSerializer ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer;
    private CombinedSerializer ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_LanguagePairNotUniquelyDecidedException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "LanguagePairNotUniquelyDecidedException");
    private CombinedSerializer ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_NoValidEndpointsException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "NoValidEndpointsException");
    private CombinedSerializer ns2_myNoValidEndpointsException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myNoValidEndpointsException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_ServiceNotActiveException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ServiceNotActiveException");
    private CombinedSerializer ns2_myServiceNotActiveException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myServiceNotActiveException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_ProcessFailedException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ProcessFailedException");
    private CombinedSerializer ns2_myProcessFailedException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myProcessFailedException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_AccessLimitExceededException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "AccessLimitExceededException");
    private CombinedSerializer ns2_myAccessLimitExceededException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myAccessLimitExceededException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_UnsupportedMatchingMethodException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "UnsupportedMatchingMethodException");
    private CombinedSerializer ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_UnsupportedLanguagePairException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "UnsupportedLanguagePairException");
    private CombinedSerializer ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer_Serializer;
    private static final javax.xml.namespace.QName ns2_ServiceNotFoundException_TYPE_QNAME = new QName("http://langrid.nict.go.jp/ws_1_2/", "ServiceNotFoundException");
    private CombinedSerializer ns2_myServiceNotFoundException_Exception_SOAPSerializer;
    private CombinedSerializer ns2_myServiceNotFoundException_Exception_SOAPSerializer_Serializer;
    private static final int DICTIONARY_NOACCESSPERMISSIONEXCEPTION_EXCEPTION_INDEX = 0;
    private static final int DICTIONARY_SERVERBUSYEXCEPTION_EXCEPTION_INDEX = 1;
    private static final int DICTIONARY_INVALIDPARAMETEREXCEPTION_EXCEPTION_INDEX = 2;
    private static final int DICTIONARY_LANGUAGEPAIRNOTUNIQUELYDECIDEDEXCEPTION_EXCEPTION_INDEX = 3;
    private static final int DICTIONARY_NOVALIDENDPOINTSEXCEPTION_EXCEPTION_INDEX = 4;
    private static final int DICTIONARY_SERVICENOTACTIVEEXCEPTION_EXCEPTION_INDEX = 5;
    private static final int DICTIONARY_PROCESSFAILEDEXCEPTION_EXCEPTION_INDEX = 6;
    private static final int DICTIONARY_ACCESSLIMITEXCEEDEDEXCEPTION_EXCEPTION_INDEX = 7;
    private static final int DICTIONARY_UNSUPPORTEDMATCHINGMETHODEXCEPTION_EXCEPTION_INDEX = 8;
    private static final int DICTIONARY_UNSUPPORTEDLANGUAGEPAIREXCEPTION_EXCEPTION_INDEX = 9;
    private static final int DICTIONARY_SERVICENOTFOUNDEXCEPTION_EXCEPTION_INDEX = 10;
    
    public EnId_bilingualdictionary_search_Fault_SOAPSerializer(boolean encodeType, boolean isNullable) {
        super(encodeType, isNullable);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        super.initialize(registry);
        ns2_myNoAccessPermissionException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.NoAccessPermissionException_Exception.class, ns2_NoAccessPermissionException_TYPE_QNAME);
        ns2_myNoAccessPermissionException_Exception_SOAPSerializer_Serializer = ns2_myNoAccessPermissionException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myServerBusyException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ServerBusyException_Exception.class, ns2_ServerBusyException_TYPE_QNAME);
        ns2_myServerBusyException_Exception_SOAPSerializer_Serializer = ns2_myServerBusyException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.InvalidParameterException_Exception.class, ns2_InvalidParameterException_TYPE_QNAME);
        ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer_Serializer = ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer.getInnermostSerializer();
        ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.LanguagePairNotUniquelyDecidedException_Exception.class, ns2_LanguagePairNotUniquelyDecidedException_TYPE_QNAME);
        ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer_Serializer = ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myNoValidEndpointsException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.NoValidEndpointsException_Exception.class, ns2_NoValidEndpointsException_TYPE_QNAME);
        ns2_myNoValidEndpointsException_Exception_SOAPSerializer_Serializer = ns2_myNoValidEndpointsException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myServiceNotActiveException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ServiceNotActiveException_Exception.class, ns2_ServiceNotActiveException_TYPE_QNAME);
        ns2_myServiceNotActiveException_Exception_SOAPSerializer_Serializer = ns2_myServiceNotActiveException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myProcessFailedException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ProcessFailedException_Exception.class, ns2_ProcessFailedException_TYPE_QNAME);
        ns2_myProcessFailedException_Exception_SOAPSerializer_Serializer = ns2_myProcessFailedException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myAccessLimitExceededException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.AccessLimitExceededException_Exception.class, ns2_AccessLimitExceededException_TYPE_QNAME);
        ns2_myAccessLimitExceededException_Exception_SOAPSerializer_Serializer = ns2_myAccessLimitExceededException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.UnsupportedMatchingMethodException_Exception.class, ns2_UnsupportedMatchingMethodException_TYPE_QNAME);
        ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer_Serializer = ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.UnsupportedLanguagePairException_Exception.class, ns2_UnsupportedLanguagePairException_TYPE_QNAME);
        ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer_Serializer = ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer.getInnermostSerializer();
        ns2_myServiceNotFoundException_Exception_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, dictionary.ServiceNotFoundException_Exception.class, ns2_ServiceNotFoundException_TYPE_QNAME);
        ns2_myServiceNotFoundException_Exception_SOAPSerializer_Serializer = ns2_myServiceNotFoundException_Exception_SOAPSerializer.getInnermostSerializer();
    }
    
    protected java.lang.Object deserializeDetail(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context, SOAPFaultInfo instance) throws java.lang.Exception {
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        javax.xml.namespace.QName elementType = null;
        SOAPInstanceBuilder builder = null;
        java.lang.Object detail = null;
        java.lang.Object obj = null;
        
        reader.nextElementContent();
        if (reader.getState() == XMLReader.END)
            return deserializeDetail(reader, context);
        XMLReaderUtil.verifyReaderState(reader, XMLReader.START);
        elementName = reader.getName();
        elementType = getType(reader);
        if (elementName.equals(ns1_fault_QNAME)) {
            if (elementType.equals(ns2_myAccessLimitExceededException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myAccessLimitExceededException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myAccessLimitExceededException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_ACCESSLIMITEXCEEDEDEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer.getXmlType()) ||
                (ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_INVALIDPARAMETEREXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_LANGUAGEPAIRNOTUNIQUELYDECIDEDEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myNoAccessPermissionException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myNoAccessPermissionException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myNoAccessPermissionException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_NOACCESSPERMISSIONEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myNoValidEndpointsException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myNoValidEndpointsException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myNoValidEndpointsException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_NOVALIDENDPOINTSEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myProcessFailedException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myProcessFailedException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myProcessFailedException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_PROCESSFAILEDEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myServerBusyException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myServerBusyException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myServerBusyException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_SERVERBUSYEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myServiceNotActiveException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myServiceNotActiveException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myServiceNotActiveException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_SERVICENOTACTIVEEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myServiceNotFoundException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myServiceNotFoundException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myServiceNotFoundException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_SERVICENOTFOUNDEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType.equals(ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) {
                obj = ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_UNSUPPORTEDLANGUAGEPAIREXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } else if (elementType == null || 
                (elementType.equals(ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer.getXmlType()) ||
                (ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer_Serializer instanceof ArraySerializerBase &&
                elementType.equals(SOAPConstants.QNAME_ENCODING_ARRAY)) ) ) {
                obj = ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer.deserialize(ns1_fault_QNAME, reader, context);
                if (obj instanceof SOAPDeserializationState) {
                    builder = new dictionary.EnId_bilingualdictionary_search_Fault_SOAPBuilder();
                    state = registerWithMemberState(instance, state, obj,
                        DICTIONARY_UNSUPPORTEDMATCHINGMETHODEXCEPTION_EXCEPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    detail = obj;
                }
                reader.nextElementContent();
                skipRemainingDetailEntries(reader);
                XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
                return (isComplete ? (Object)detail : (Object)state);
            } 
        }
        return deserializeDetail(reader, context);
    }
    
    protected void serializeDetail(java.lang.Object detail, XMLWriter writer, SOAPSerializationContext context)
        throws java.lang.Exception {
        if (detail == null) {
            throw new SerializationException("soap.unexpectedNull");
        }
        writer.startElement(DETAIL_QNAME);
        
        boolean pushedEncodingStyle = false;
        if (encodingStyle != null) {
            context.pushEncodingStyle(encodingStyle, writer);
        }
        if (detail instanceof dictionary.AccessLimitExceededException_Exception) {
            ns2_myAccessLimitExceededException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.LanguagePairNotUniquelyDecidedException_Exception) {
            ns2_myLanguagePairNotUniquelyDecidedException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.NoAccessPermissionException_Exception) {
            ns2_myNoAccessPermissionException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.NoValidEndpointsException_Exception) {
            ns2_myNoValidEndpointsException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.ProcessFailedException_Exception) {
            ns2_myProcessFailedException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.ServerBusyException_Exception) {
            ns2_myServerBusyException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.ServiceNotActiveException_Exception) {
            ns2_myServiceNotActiveException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.ServiceNotFoundException_Exception) {
            ns2_myServiceNotFoundException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.UnsupportedLanguagePairException_Exception) {
            ns2_myUnsupportedLanguagePairException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.UnsupportedMatchingMethodException_Exception) {
            ns2_myUnsupportedMatchingMethodException_Exception_SOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        else if (detail instanceof dictionary.InvalidParameterException_Exception) {
            ns2_myInvalidParameterException_Exception_InterfaceSOAPSerializer_Serializer.serialize(detail, ns1_fault_QNAME, null, writer, context);
        }
        writer.endElement();
        if (pushedEncodingStyle) {
            context.popEncodingStyle();
        }
    }
}
